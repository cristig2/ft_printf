Idea general de cómo estructurar el proyecto printf:

Análisis de la cadena de formato: 

La función printf toma una cadena de formato como argumento, donde se 
especifican los tipos y los formatos de los datos que se van a imprimir. Necesitarás implementar un 
analizador que recorra la cadena de formato y detecte las conversiones y especificadores.

Argumentos variables:

La función printf permite pasar un número variable de argumentos después de la 
cadena de formato. Deberás encontrar una forma de manejar esto en tu implementación. Una opción es 
utilizar la biblioteca stdarg.h para trabajar con argumentos variables.

Manejo de conversiones:

printf admite una variedad de conversiones como %d, %f, %s, etc. Necesitarás 
identificar estas conversiones en la cadena de formato y extraer los argumentos correspondientes para 
imprimir.

Impresión formateada:

Una vez que tengas la conversión y los argumentos, deberás formatear correctamente 
los datos y enviarlos a la salida. Puedes usar la función write o fwrite para manejar la salida.

Gestión de errores:

Deberás manejar situaciones de error, como formatos incorrectos o falta de argumentos,
de manera adecuada.